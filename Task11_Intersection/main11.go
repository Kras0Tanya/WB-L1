package main

import "fmt"

// принимает два слайса (множества), возвращает новый слайс с пересечением
func intersection(a, b []int) []int {
	// создаем мапу для хранения элементов первого слайса
	m := make(map[int]bool)
	// заполняем мапу элементами (ключами) из первого слайса
	for _, val := range a {
		m[val] = true
	}
	var result []int
	// проверяем элементы второго слайса и если он есть в мапе, добавляем в результат
	for _, val := range b {
		if m[val] {
			result = append(result, val)
			delete(m, val) // удаляем использованный элемент из мапы, чтобы избежать дублирования в результате
		}
	}
	return result
}

func main() {
	a := []int{1, 2, 3}
	b := []int{2, 3, 4}
	fmt.Println("A =", a)
	fmt.Println("B =", b)
	fmt.Println("Intersection =", intersection(a, b))
}

/*
Пересечение множеств

Реализовать пересечение двух неупорядоченных множеств (например, двух слайсов) — т.е. вывести элементы, присутствующие и в первом, и во втором.
Пример:
A = {1,2,3}
B = {2,3,4}
Пересечение = {2,3}
*/
